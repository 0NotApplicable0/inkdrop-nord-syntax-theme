@import './colors';

.editor {
  .CodeMirror {
    // Background color of main window
    background-color: @nord0;
    color: @nord4;
  }
  .CodeMirror-scroll {
    // Color of otherwise un-styled text
    color: @nord4;
  }
  .CodeMirror-gutters {
    // Gutter to the left
    background-color: @nord0;
    border-right: 1px solid @nord3;
  }
  .CodeMirror-linenumber {
    // Line numbers in the gutter
    color: @nord3;
  }
  .CodeMirror-selected {
    // Highlighed text
    background-color: @nord1;
    opacity: 0.6;
  }
  .CodeMirror-focused .CodeMirror-selected {
    // Highlighed text
    background-color: @nord1;
    opacity: 0.6;
  }
  .CodeMirror-cursor {
    // The cursor
    border-left: 1px solid @nord4;
  }
  .CodeMirror-matchingbracket,
  .CodeMirror-matchingtag {
    // When you click a tag/bracket and the matching one is highlighted
    outline: 1px solid @nord7;
    color: @nord4 !important;
  }
  .CodeMirror-foldgutter-open:after {
    // Those little arrows in the gutter
    color: @nord3;
  }
  .CodeMirror-foldgutter-folded:after {
    // The arrows after you collapse code
    color: @nord3;
  }
  .CodeMirror.over-gutter,
  .CodeMirror-activeline {
    .CodeMirror-foldgutter-open:after {
      // Arrows when hovering on the gutter
      color: @nord3;
    }
  }
  .CodeMirror-foldmarker {
    // The [...] marking collapsed code
    border-color: @nord3;
    background-color: @nord3;
    color: @nord2;
  }
  .CodeMirror .CodeMirror-linewidget img.inline-widget {
    background: rgba(0, 0, 0, 0.05);
  }
  .CodeMirror-searching {
    // Ctrl + F results
    background-color: @nord13;
    // Selected result
    &.searching-current-match {
      background-color: @nord12;
    }
  }

  /* All 'dem swatches */

  .CodeMirror {
    .CodeMirror-placeholder {
      color: #D8DEE999;
    }
    .cm-atom {
      color: @nord9;
    }
    .cm-formatting-list.cm-variable-3 {
      color: @nord12;
    }

    .cm-keyword {
      color: @nord9;
    }
    .cm-formatting-list.cm-variable-2 {
      color: @nord8;
    }

    .cm-url {
      color: @nord7 !important;
    }

    .cm-string,
    .cm-hr {
      color: @nord14;
    }
    .cm-string-2 {
      color: @nord7;
    }
    .cm-number {
      color: @nord15;
    }
    .cm-attribute,
    .cm-plus {
      color: @nord10;
    }
    .cm-def,
    .cm-property {
      color: @nord8;
    }
    .cm-variable {
      color: @nord7;
    }
    .cm-operator {
      color: @nord9;
    }
    .cm-meta,
    .cm-bracket {
      color: @nord7;
    }
    .cm-comment {
      color: @nord3;
      font-style: italic;
    }
    .cm-error,
    .cm-minus {
      color: @nord11;
    }
    .cm-formatting-header {
      color: @nord9 !important;
    }
    .cm-header {
      color: @nord7;
    }
    .cm-link {
      color: @nord14;
      text-underline-position: under;
    }
    .cm-rangeinfo {
      color: @nord12;
    }
    .cm-qualifier,
    .cm-builtin,
    .cm-tag {
      color: @nord8;
    }
    .cm-quote {
      color: @nord15;
      font-style: italic;
    }
    .cm-whitespace::before {
      color: @nord3;
    }

    // carriage return
    .CodeMirror-code > div > pre > span::after,
    .CodeMirror-line > span::after {
      color: @nord0;
      opacity: 0.4;
    }

    .cm-inline-code {
      background: rgba(0, 0, 0, 0.02);
      color: @nord7;
    }

    .gfm-codeblock-bg.CodeMirror-linebackground {
      background: rgba(0, 0, 0, 0.01);
    }

    .cm-table-sep,
    .table-row.table-row-1 {
      color: @nord14;
    }

    .cm-formatting-code-block {
      color: @nord7;
    }
  }

  /* Active Line Highlight support */
  .CodeMirror-activeline-background {
    background-color: @nord6;
  }
  .CodeMirror-activeline .CodeMirror-linenumber {
    background-color: @nord6;
  }
  .CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
    background-color: @nord6;
  }

  [class*='list-line']
    .cm-keyword:not(.cm-formatting-list-ul):not(.cm-link):not(.cm-inline-code) {
    color: @nord4;
  }
}
